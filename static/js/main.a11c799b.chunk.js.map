{"version":3,"sources":["App.js","index.js"],"names":["App","useState","input","setInput","article","setArticle","getNews","fetch","then","response","json","data","articles","catch","error","console","log","useEffect","className","type","onChange","e","value","target","placeholder","onClick","map","index","src","urlToImage","alt","title","author","publishedAt","string","content","n","length","substr","href","url","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAwEeA,MArEf,WACE,MAAwBC,mBAAS,cAAjC,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAeC,EAAf,KAsBA,SAASC,IACPC,MAAM,uCAAD,OAAwCL,EAAxC,6CACJM,MAAK,SAACC,GAAD,OAAaA,EAASC,UAC3BF,MAAK,SAACG,GACLN,EAAWM,EAAKC,aAEjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAIhB,OAhBAG,qBAAU,WACNX,MACD,CAACJ,IAeF,sBAAKgB,UAAU,MAAf,UACE,2CACA,sBAAKA,UAAU,SAAf,UACA,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAlClC,IAAmBC,IAkC+BD,EAAEE,OAAOD,MAjCzDnB,EAASmB,IAiCyDE,YAAY,2BAC5E,wBAAQC,QAASnB,EAAjB,uBAGH,qBAAKY,UAAU,UAAf,SAEEhB,EACAE,EAAQsB,KAAI,SAACd,EAASe,GACpB,OACE,sBAAiBT,UAAU,QAA3B,UACE,qBAAKU,IAAKhB,EAASiB,WAAYC,IAAI,YACnC,6BAAKlB,EAASmB,QAEd,sBAAKb,UAAU,iBAAf,UACA,4BAAIN,EAASoB,SACb,mBAAGd,UAAU,gBAAb,SAA8BN,EAASqB,iBAEvC,6BA1CSC,EA0CItB,EAASuB,QA1CLC,EA0Ca,KAzCxB,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQG,QAASD,EAAIF,EAAOI,OAAO,EAAGF,EAAI,GAAK,MAAQF,KA0CvD,mBAAGK,KAAM3B,EAAS4B,IAAlB,SACA,wBAAQtB,UAAU,YAAlB,2BAVQS,GAlCjB,IAAkBO,EAAQE,UAHxBjC,EAAS,oBCTbsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a11c799b.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport './App.css';\n\nfunction App() {\n  const[input,setInput] = useState('Technology'); //default input \n  const [article,setArticle]=useState([]);        // storing articles into array\n\n  //reading input field\n  function readValue(value){\n    setInput(value);\n  }\n\n  //return to default input state if no input provided\n  const resetInput = () => {\n    setInput('Technology')\n}\n  //truncating long news description appended with ... \n  function truncate(string, n) {\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\n  }\n\n  //run input state variable once \n  useEffect(() => {\n      getNews();\n  }, [input])\n\n  //fetch specific news via category entered in input field\n  function getNews(){\n    fetch(`https://newsapi.org/v2/everything?q=${input}&apiKey=88b5ed72a3e543f9a116a1633f92885e`)\n    .then((response)=> response.json())\n    .then((data)=>{\n      setArticle(data.articles);\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>News Hunt</h1>\n      <div className=\"search\">\n      <input type=\"text\" onChange={(e) =>{readValue(e.target.value)}} placeholder=\"Enter category here...\"/>\n      <button onClick={getNews}>Submit</button>\n    </div>\n    \n   <div className=\"wrapper\">\n   {\n     input?(\n     article.map((articles,index) =>{\n       return(\n         <div key={index} className=\"cards\">\n           <img src={articles.urlToImage} alt=\"img-src\" />\n           <h4>{articles.title}</h4>\n           \n           <div className=\"author_publish\">\n           <p>{articles.author}</p>\n           <p className=\"article__Time\">{articles.publishedAt}</p>\n           </div>\n           <p>{truncate(articles.content,200)}</p>\n           <a href={articles.url}>\n           <button className=\"more__btn\">Read More</button>\n           </a>\n         </div>\n       )\n     })):(resetInput())\n   }   \n   </div>\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}